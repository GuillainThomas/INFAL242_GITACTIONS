services:
  db:
    image: postgres:alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: blog
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: example
    volumes:
      - db-data:/var/lib/mysql
      - ./backend/src/init.sql:/docker-entrypoint-initdb.d/import.sql:ro
    networks:
      - db_app

  adminer:
    image: adminer:latest
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      - db
    networks:
      - db_app

  backend:
    build: ./backend/
    restart: unless-stopped
    ports:
      - "3001:3001"
    depends_on:
      - db
    networks:
      - db_app
      - internal_app

  frontend:
    build: ./frontend/
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
    networks:
      - db_app
      - internal_app

  reverse-proxy:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
      - frontend
    networks:
      - db_app
      - internal_app
      - proxy_public

volumes:
  db-data:


networks:
  proxy_public:
    driver: bridge
  internal_app:
    driver: bridge
    internal: true
  db_app:
    driver: bridge
    internal: true
